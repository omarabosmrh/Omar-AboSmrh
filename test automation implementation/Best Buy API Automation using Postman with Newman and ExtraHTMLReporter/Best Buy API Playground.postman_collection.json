{
	"info": {
		"_postman_id": "6adcce2b-ecf6-4709-83a1-25a837d4d362",
		"name": "Best Buy API Playground",
		"description": "A sample dataset and API for you to experiment with.\n\nContact Support:\n Name: Best Buy API team\n Email: developer@bestbuy.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "products",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "find Product By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"let jsonResponse = pm.response.json();\r",
											"\r",
											"pm.test(\"Response should be a parsable JSON\", function() {\r",
											"    pm.expect(jsonResponse).to.be.ok;\r",
											"});\r",
											"\r",
											"pm.test(\"Response body should be an object\", function() {\r",
											"    pm.expect(jsonResponse).to.be.an('object');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body should be in the correct format\", function() {\r",
											"    pm.expect(jsonResponse.id).to.be.a('Number');\r",
											"    //pm.expect(jsonResponse.id).to.have.lengthOf(7);\r",
											"    pm.expect(jsonResponse.name).to.be.a('string');\r",
											"    pm.expect(jsonResponse.type).to.be.a('string');\r",
											"    pm.expect(jsonResponse.price).to.be.a('Number');\r",
											"    pm.expect(jsonResponse.upc).to.be.a('string');\r",
											"    pm.expect(jsonResponse.shipping).to.be.a('Number');\r",
											"    pm.expect(jsonResponse.description).to.be.a('string');\r",
											"    pm.expect(jsonResponse.model).to.be.a('string');\r",
											"    pm.expect(jsonResponse.url).to.be.a('string');\r",
											"    pm.expect(jsonResponse.image).to.be.a('string');\r",
											"    pm.expect(jsonResponse.createdAt).to.be.a('string');\r",
											"    pm.expect(jsonResponse.categories).to.be.a('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Body contains string\",() => {\r",
											"  pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id?id=43900",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id"
									],
									"query": [
										{
											"key": "id",
											"value": "43900"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "-11811574",
											"description": "(Required) ID of product to fetch"
										}
									]
								},
								"description": "Returns a product based on an ID,"
							},
							"response": [
								{
									"name": "Product response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of product to fetch"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"aliquip non\",\n  \"type\": \"sit adip\",\n  \"upc\": \"ea\",\n  \"description\": \"aliquip officia veniam reprehenderit\",\n  \"model\": \"in id ad\",\n  \"price\": 69791170.12,\n  \"shipping\": 165475033.16,\n  \"manufacturer\": \"labore magna\",\n  \"url\": \"labore eu\",\n  \"image\": \"fugiat dolor nostrud\"\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of product to fetch"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
								}
							]
						},
						{
							"name": "update Product By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is JSON\", function () {\r",
											"    pm.response.to.be.json;\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"aliquip non\",\n  \"type\": \"sit adip\",\n  \"upc\": \"ea\",\n  \"description\": \"aliquip officia veniam reprehenderit\",\n  \"model\": \"in id ad\",\n  \"price\": 69791170.12,\n  \"shipping\": 165475033.16,\n  \"manufacturer\": \"labore magna\",\n  \"url\": \"labore eu\",\n  \"image\": \"fugiat dolor nostrud\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/products/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-11811574",
											"description": "(Required) ID of product to fetch"
										}
									]
								},
								"description": "Updates a product based on an ID,"
							},
							"response": [
								{
									"name": "Product response",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"aliquip non\",\n  \"type\": \"sit adip\",\n  \"upc\": \"ea\",\n  \"description\": \"aliquip officia veniam reprehenderit\",\n  \"model\": \"in id ad\",\n  \"price\": 69791170.12,\n  \"shipping\": 165475033.16,\n  \"manufacturer\": \"labore magna\",\n  \"url\": \"labore eu\",\n  \"image\": \"fugiat dolor nostrud\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of product to fetch"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"aliquip non\",\n  \"type\": \"sit adip\",\n  \"upc\": \"ea\",\n  \"description\": \"aliquip officia veniam reprehenderit\",\n  \"model\": \"in id ad\",\n  \"price\": 69791170.12,\n  \"shipping\": 165475033.16,\n  \"manufacturer\": \"labore magna\",\n  \"url\": \"labore eu\",\n  \"image\": \"fugiat dolor nostrud\"\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"aliquip non\",\n  \"type\": \"sit adip\",\n  \"upc\": \"ea\",\n  \"description\": \"aliquip officia veniam reprehenderit\",\n  \"model\": \"in id ad\",\n  \"price\": 69791170.12,\n  \"shipping\": 165475033.16,\n  \"manufacturer\": \"labore magna\",\n  \"url\": \"labore eu\",\n  \"image\": \"fugiat dolor nostrud\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of product to fetch"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
								}
							]
						},
						{
							"name": "delete Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"let jsonResponse = pm.response.json();\r",
											"\r",
											"pm.test(\"Response should be a parsable JSON\", function() {\r",
											"    pm.expect(jsonResponse).to.be.ok;\r",
											"});\r",
											"\r",
											"pm.test(\"Response body should be an object\", function() {\r",
											"    pm.expect(jsonResponse).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response body should be in the correct format\", function() {\r",
											"    pm.expect(jsonResponse.args).to.be.a('object');\r",
											"    pm.expect(jsonResponse.data).to.be.a('string');\r",
											"    pm.expect(jsonResponse.files).to.be.a('object');\r",
											"    pm.expect(jsonResponse.form).to.be.a('object');\r",
											"    pm.expect(jsonResponse.headers).to.be.a('object');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-11811574",
											"description": "(Required) ID of product to delete"
										}
									]
								},
								"description": "Deletes a single product based on the ID supplied"
							},
							"response": [
								{
									"name": "Product deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of product to delete"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of product to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "find Products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products?$limit=-16704863&$skip=-16704863",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "$limit",
									"value": "-16704863",
									"description": "Limit the number of products returned."
								},
								{
									"key": "$skip",
									"value": "-16704863",
									"description": "Skip the specified number of products."
								}
							]
						},
						"description": "Returns all products that match the given filter criteria. If no filters are included, defaults to returning a paginated list of all products."
					},
					"response": [
						{
							"name": "Product response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products?$limit=-16704863&$skip=-16704863",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									],
									"query": [
										{
											"key": "$limit",
											"value": "-16704863"
										},
										{
											"key": "$skip",
											"value": "-16704863"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"volupta\",\n    \"type\": \"aute e\",\n    \"upc\": \"Lorem mol\",\n    \"description\": \"nisi laborum\",\n    \"model\": \"occaecat\",\n    \"price\": 27301254.2,\n    \"shipping\": 64896094.28,\n    \"manufacturer\": \"dolor ea velit \",\n    \"url\": \"deserunt et nulla amet\",\n    \"image\": \"dolore\"\n  },\n  {\n    \"name\": \"consectetur voluptate dolor veniam laborum\",\n    \"type\": \"adipisicing commodo\",\n    \"upc\": \"exe\",\n    \"description\": \"officia cupidatat ut exercitation\",\n    \"model\": \"sunt Excepteur ad ipsu\",\n    \"price\": 157293329.6,\n    \"shipping\": 115360736.42,\n    \"manufacturer\": \"dolore reprehenderit ut dolor\",\n    \"url\": \"Lorem\",\n    \"image\": \"nulla dolore\"\n  }\n]"
						},
						{
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products?$limit=-16704863&$skip=-16704863",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									],
									"query": [
										{
											"key": "$limit",
											"value": "-16704863"
										},
										{
											"key": "$skip",
											"value": "-16704863"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
						}
					]
				},
				{
					"name": "add Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"dddddd\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(201);\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Returns 7 char alphanumeric id\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.form.someHash).to.match(/^[a-z0-9]{7}$/);\r",
									"});\r",
									"\r",
									"pm.test(\"Returns 15 char alhpanumeric id\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.form.secondHash).to.match(/^[a-z0-9]{15}$/);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"ddd\",\n  \"type\": \"dddd\",\n  \"price\": 10,\n  \"shipping\": 10,\n  \"upc\": \"ddddd\",\n  \"description\": \"dddd\",\n  \"manufacturer\": \"dddd\",\n  \"model\": \"dddd\",\n  \"url\": \"ddddd\",\n  \"image\": \"fffffff\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						},
						"description": "Creates a new product"
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"aliquip non\",\n  \"type\": \"sit adip\",\n  \"upc\": \"ea\",\n  \"description\": \"aliquip officia veniam reprehenderit\",\n  \"model\": \"in id ad\",\n  \"price\": 69791170.12,\n  \"shipping\": 165475033.16,\n  \"manufacturer\": \"labore magna\",\n  \"url\": \"labore eu\",\n  \"image\": \"fugiat dolor nostrud\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"aliquip non\",\n  \"type\": \"sit adip\",\n  \"upc\": \"ea\",\n  \"description\": \"aliquip officia veniam reprehenderit\",\n  \"model\": \"in id ad\",\n  \"price\": 69791170.12,\n  \"shipping\": 165475033.16,\n  \"manufacturer\": \"labore magna\",\n  \"url\": \"labore eu\",\n  \"image\": \"fugiat dolor nostrud\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
						}
					]
				},
				{
					"name": "verify product removed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Products does not include deleted product\", function () {\r",
									"    let savedproductId = pm.environment.get(\"productId\");\r",
									"    pm.response.to.not.include(savedproductId);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/:?id=43900",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":"
							],
							"query": [
								{
									"key": "id",
									"value": "43900"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "testing headers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Content-Type header is present\", () => {\r",
									"  pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "testing coockies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cookie JSESSIONID is present\", () => {\r",
									"  pm.expect(pm.cookies.has('JSESSIONID')).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Cookie isLoggedIn has value 1\", () => {\r",
									"  pm.expect(pm.cookies.get('isLoggedIn')).to.eql('1');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "stores",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "find Store By Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stores/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stores",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-11811574",
											"description": "(Required) ID of store to fetch"
										}
									]
								},
								"description": "Returns a store based on store ID"
							},
							"response": [
								{
									"name": "Store response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/stores/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stores",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of store to fetch"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"nulla consect\",\n  \"address\": \"officia labore fugiat tempor\",\n  \"city\": \"non in\",\n  \"state\": \"sunt id in\",\n  \"zip\": \"consectetur in id\",\n  \"type\": \"enim pariatur cupidatat\",\n  \"address2\": \"sint Ut tempor\",\n  \"lat\": 94022644.01820263,\n  \"lng\": -70582809.90372135,\n  \"hours\": \"dolore sunt\",\n  \"services\": {}\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/stores/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stores",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of store to fetch"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
								}
							]
						},
						{
							"name": "update Store By Id",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"nulla consect\",\n  \"address\": \"officia labore fugiat tempor\",\n  \"city\": \"non in\",\n  \"state\": \"sunt id in\",\n  \"zip\": \"consectetur in id\",\n  \"type\": \"enim pariatur cupidatat\",\n  \"address2\": \"sint Ut tempor\",\n  \"lat\": 94022644.01820263,\n  \"lng\": -70582809.90372135,\n  \"hours\": \"dolore sunt\",\n  \"services\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/stores/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stores",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-11811574",
											"description": "(Required) ID of store to update"
										}
									]
								},
								"description": "Updates a store based on store ID"
							},
							"response": [
								{
									"name": "Store response",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"nulla consect\",\n  \"address\": \"officia labore fugiat tempor\",\n  \"city\": \"non in\",\n  \"state\": \"sunt id in\",\n  \"zip\": \"consectetur in id\",\n  \"type\": \"enim pariatur cupidatat\",\n  \"address2\": \"sint Ut tempor\",\n  \"lat\": 94022644.01820263,\n  \"lng\": -70582809.90372135,\n  \"hours\": \"dolore sunt\",\n  \"services\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/stores/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stores",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of store to update"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"nulla consect\",\n  \"address\": \"officia labore fugiat tempor\",\n  \"city\": \"non in\",\n  \"state\": \"sunt id in\",\n  \"zip\": \"consectetur in id\",\n  \"type\": \"enim pariatur cupidatat\",\n  \"address2\": \"sint Ut tempor\",\n  \"lat\": 94022644.01820263,\n  \"lng\": -70582809.90372135,\n  \"hours\": \"dolore sunt\",\n  \"services\": {}\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"nulla consect\",\n  \"address\": \"officia labore fugiat tempor\",\n  \"city\": \"non in\",\n  \"state\": \"sunt id in\",\n  \"zip\": \"consectetur in id\",\n  \"type\": \"enim pariatur cupidatat\",\n  \"address2\": \"sint Ut tempor\",\n  \"lat\": 94022644.01820263,\n  \"lng\": -70582809.90372135,\n  \"hours\": \"dolore sunt\",\n  \"services\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/stores/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stores",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of store to update"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
								}
							]
						},
						{
							"name": "deletestore",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stores/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stores",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-11811574",
											"description": "(Required) ID of store to delete"
										}
									]
								},
								"description": "Deletes a single store based on the ID supplied"
							},
							"response": [
								{
									"name": "Store deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/stores/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stores",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of store to delete"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "unexpected error",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/stores/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stores",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of store to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "find Stores",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stores?$limit=-16704863&$skip=-16704863",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores"
							],
							"query": [
								{
									"key": "$limit",
									"value": "-16704863",
									"description": "Limit the number of stores returned."
								},
								{
									"key": "$skip",
									"value": "-16704863",
									"description": "Skip the specified number of stores."
								}
							]
						},
						"description": "Returns all stores that match the given filter criteria. If no filters are included, defaults to returning a paginated list of all stores."
					},
					"response": [
						{
							"name": "Store response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stores?$limit=-16704863&$skip=-16704863",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stores"
									],
									"query": [
										{
											"key": "$limit",
											"value": "-16704863"
										},
										{
											"key": "$skip",
											"value": "-16704863"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"id et sed\",\n    \"address\": \"Duis voluptate\",\n    \"city\": \"ipsu\",\n    \"state\": \"rep\",\n    \"zip\": \"nulla sit occaecat sint\",\n    \"type\": \"laborum eu\",\n    \"address2\": \"Ex\",\n    \"lat\": 56897489.29190305,\n    \"lng\": 48180908.235945225,\n    \"hours\": \"sed irure anim qui\",\n    \"services\": {}\n  },\n  {\n    \"name\": \"in commodo reprehenderit aute\",\n    \"address\": \"fugiat culpa\",\n    \"city\": \"ut eu tempor\",\n    \"state\": \"c\",\n    \"zip\": \"id ad consequat\",\n    \"type\": \"in \",\n    \"address2\": \"amet fugiat id\",\n    \"lat\": 34547955.44623473,\n    \"lng\": -83108138.68848945,\n    \"hours\": \"consequat qui id laborum\",\n    \"services\": {}\n  }\n]"
						},
						{
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stores?$limit=-16704863&$skip=-16704863",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stores"
									],
									"query": [
										{
											"key": "$limit",
											"value": "-16704863"
										},
										{
											"key": "$skip",
											"value": "-16704863"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
						}
					]
				},
				{
					"name": "add Store",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"nulla consect\",\n  \"address\": \"officia labore fugiat tempor\",\n  \"city\": \"non in\",\n  \"state\": \"sunt id in\",\n  \"zip\": \"consectetur in id\",\n  \"type\": \"enim pariatur cupidatat\",\n  \"address2\": \"sint Ut tempor\",\n  \"lat\": 94022644.01820263,\n  \"lng\": -70582809.90372135,\n  \"hours\": \"dolore sunt\",\n  \"services\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores"
							]
						},
						"description": "Creates a new store"
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"nulla consect\",\n  \"address\": \"officia labore fugiat tempor\",\n  \"city\": \"non in\",\n  \"state\": \"sunt id in\",\n  \"zip\": \"consectetur in id\",\n  \"type\": \"enim pariatur cupidatat\",\n  \"address2\": \"sint Ut tempor\",\n  \"lat\": 94022644.01820263,\n  \"lng\": -70582809.90372135,\n  \"hours\": \"dolore sunt\",\n  \"services\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/stores",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stores"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"nulla consect\",\n  \"address\": \"officia labore fugiat tempor\",\n  \"city\": \"non in\",\n  \"state\": \"sunt id in\",\n  \"zip\": \"consectetur in id\",\n  \"type\": \"enim pariatur cupidatat\",\n  \"address2\": \"sint Ut tempor\",\n  \"lat\": 94022644.01820263,\n  \"lng\": -70582809.90372135,\n  \"hours\": \"dolore sunt\",\n  \"services\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/stores",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stores"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "services",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "find Service By Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/services/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-11811574",
											"description": "(Required) ID of service to fetch"
										}
									]
								},
								"description": "Returns a services based on service ID"
							},
							"response": [
								{
									"name": "Service response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/services/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of service to fetch"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"ea esse\"\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/services/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of service to fetch"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
								}
							]
						},
						{
							"name": "update Service By Id",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"ea esse\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/services/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-11811574",
											"description": "(Required) ID of service to fetch"
										}
									]
								},
								"description": "Updates a services based on service ID"
							},
							"response": [
								{
									"name": "Service response",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"ea esse\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/services/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of service to fetch"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"ea esse\"\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"ea esse\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/services/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of service to fetch"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
								}
							]
						},
						{
							"name": "deleteservice",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful delete status response\", function () {\r",
											"    let response = pm.response.json();\r",
											"    pm.expect(response.status).to.equal(\"service removed\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/services/:id?id=43900",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services",
										":id"
									],
									"query": [
										{
											"key": "id",
											"value": "43900"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "-11811574",
											"description": "(Required) ID of service to delete"
										}
									]
								},
								"description": "Deletes a single service based on the ID supplied"
							},
							"response": [
								{
									"name": "Service deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/services/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of service to delete"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/services/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of service to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "find Services",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/services?$limit=-16704863&$skip=-16704863",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"services"
							],
							"query": [
								{
									"key": "$limit",
									"value": "-16704863",
									"description": "Limit the number of services returned."
								},
								{
									"key": "$skip",
									"value": "-16704863",
									"description": "Skip the specified number of services."
								}
							]
						},
						"description": "Returns all services that match the given filter criteria. If no filters are included, defaults to returning a paginated list of all services."
					},
					"response": [
						{
							"name": "Service response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/services?$limit=-16704863&$skip=-16704863",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services"
									],
									"query": [
										{
											"key": "$limit",
											"value": "-16704863"
										},
										{
											"key": "$skip",
											"value": "-16704863"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"consequat tempor dolor eiusmod\"\n  },\n  {\n    \"name\": \"Lorem Dui\"\n  }\n]"
						},
						{
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/services?$limit=-16704863&$skip=-16704863",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services"
									],
									"query": [
										{
											"key": "$limit",
											"value": "-16704863"
										},
										{
											"key": "$skip",
											"value": "-16704863"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
						}
					]
				},
				{
					"name": "add Service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"ea esse\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"services"
							]
						},
						"description": "Creates a new service"
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"ea esse\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"ea esse\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "categories",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "find Category By Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/categories/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-11811574",
											"description": "(Required) ID of category to fetch"
										}
									]
								},
								"description": "Returns a categories based on category ID"
							},
							"response": [
								{
									"name": "Category response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of category to fetch"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"incididunt c\",\n  \"name\": \"sed\"\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of category to fetch"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
								}
							]
						},
						{
							"name": "update Category By Id",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"incididunt c\",\n  \"name\": \"sed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-11811574",
											"description": "(Required) ID of category to update"
										}
									]
								},
								"description": "Updates a categories based on category ID"
							},
							"response": [
								{
									"name": "Category response",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"incididunt c\",\n  \"name\": \"sed\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of category to update"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"incididunt c\",\n  \"name\": \"sed\"\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"incididunt c\",\n  \"name\": \"sed\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of category to update"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
								}
							]
						},
						{
							"name": "deletecategory",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/categories/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-11811574",
											"description": "(Required) ID of category to delete"
										}
									]
								},
								"description": "Deletes a single category based on the ID supplied"
							},
							"response": [
								{
									"name": "Category deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of category to delete"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-11811574",
													"description": "(Required) ID of category to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "find Categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/categories?$limit=-16704863&$skip=-16704863",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories"
							],
							"query": [
								{
									"key": "$limit",
									"value": "-16704863",
									"description": "Limit the number of categories returned."
								},
								{
									"key": "$skip",
									"value": "-16704863",
									"description": "Skip the specified number of categories."
								}
							]
						},
						"description": "Returns all categories that match the given filter criteria. If no filters are included, defaults to returning a paginated list of all categories."
					},
					"response": [
						{
							"name": "Category response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories?$limit=-16704863&$skip=-16704863",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									],
									"query": [
										{
											"key": "$limit",
											"value": "-16704863"
										},
										{
											"key": "$skip",
											"value": "-16704863"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"et in labore\",\n    \"name\": \"ipsum Lorem\"\n  },\n  {\n    \"id\": \"et ullamco\",\n    \"name\": \"in minim adipisicing dolor\"\n  }\n]"
						},
						{
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories?$limit=-16704863&$skip=-16704863",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									],
									"query": [
										{
											"key": "$limit",
											"value": "-16704863"
										},
										{
											"key": "$skip",
											"value": "-16704863"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
						}
					]
				},
				{
					"name": "add Category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"incididunt c\",\n  \"name\": \"sed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories"
							]
						},
						"description": "Creates a new category"
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"incididunt c\",\n  \"name\": \"sed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"incididunt c\",\n  \"name\": \"sed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"cupidatat commodo pariatur minim\",\n  \"message\": \"incididunt Duis dolor officia Excepteur\",\n  \"code\": 52412710,\n  \"className\": \"ut officia dolore Excepteur sunt\",\n  \"errors\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "get Version",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/version",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"version"
					]
				},
				"description": "Returns the current version of the API Playground being run"
			},
			"response": [
				{
					"name": "Version response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "get Healthcheck",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/healthcheck",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"healthcheck"
					]
				},
				"description": "Returns healthcheck information about the system"
			},
			"response": [
				{
					"name": "Healthcheck response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/healthcheck",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"healthcheck"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/healthcheck",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"healthcheck"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "schemavalidation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var schema = {\r",
							"  \"items\": {\r",
							"    \"type\": \"boolean\"\r",
							"  }\r",
							"};\r",
							"\r",
							"var data1 = [true, false];\r",
							"var data2 = [true, 123];\r",
							"\r",
							"pm.test('Schema is valid', function() {\r",
							"  pm.expect(tv4.validate(data1, schema)).to.be.true;\r",
							"//   pm.expect(tv4.validate(data2, schema)).to.be.true; // this statement would not be true\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "sql injection security",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Does not return password\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.form.customerName).to.not.include(\"examplePassword\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": []
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3030",
			"type": "string"
		}
	]
}